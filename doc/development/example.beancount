;;; -*- mode: org; mode: beancount; coding: utf-8; fill-column: 400; -*-

Hi Mark,
Here is the cheatsheet for my input syntax for my double-entry book-keeping system:

  ;; Comments are prefixed with ';', such as this line. These are ignore.

  ;; The following directive creates a new account to hold units of 'USD'.
  ;; The name of the account is entirely arbitrary, but I like to use
  ;; '<type>:<country>:<institution>' as a prefix to all accounts.
  2011-10-01 open Assets:US:TD:Checking  USD

  ;; This is an example simple transaction.
  ;; This one has a hash-tag on it, I can later filter transactions by only those
  ;; if I want.
  2013-05-* "Smorgas" | "Dinner with Andryi Proskurakov & Mark Grant" #wall-street
    Assets:US:TD:Checking       25 USD
    Assets:Cash                -25 USD


  ;; This is another. This one does not have a payee, and shows how we
  ;; are able to leave out one transaction's amount: the system automatically
  ;; balances it.  Also, using "!" instead of "*" as the transaction marker
  ;; indicates ;; that something might wrong with this transactions, we're unsure
  ;; of some amount, and it needs to be checked some more.
  2013-05-18 ! "Milk (bought with debit card)."
    Assets:US:TD:Checking       -5 USD
    Expenses:Food:Grocery

  ;; This is a special directive that inserts a checkpoint, that this account's
  ;; balance has this many 'USD' units at that date. This typically cross-checks
  ;; against the bottom line of a mailed statement.
  2013-05-17 check Income:US:TD:Checking  617.00 USD

  ;; ... many more ...

  ;; (Optional) When you close an account, you should add this directive.
  ;; This allows us to ignore closed accounts in reporting periods which
  ;; begin after this date, and to check for errors.
  2013-09-01 close Assets:US:TD:Checking


That's pretty much it! :-)

Of course the file has many more accounts and transactions in it,
but the syntax is pretty much following the template above.

The declarations can be input in any order, so you can organize the
input file any way you like. I like to organize it by country, then
institution, then account (the file has multiple sections).

Note that the 'units' deposited in accounts are entirely arbitrary--there
is no need to declare them in advance. For instance, I have US dollars
(USD), Canadian dollars (CAD), and others, stocks (e.g. HOOL, AAPL, etc.),
my condo unit was a 'LOFT', I track vacation hours as 'VACHR' units, and I
can even track airmiles with it (as 'AIRMILES') if I want to. The
possibilities are endless.

There are a few other "special" directives, but they are entirely optional,
but here's the cheat sheet for those as well:

  ;; Insert a transaction from the opening balances account to the checking
  ;; account that will make the next "check" directive balance. This is
  ;; convenient when starting to enter data for a new file, as you would
  ;; typically begin updating your account from the latest part, moving
  ;; backwards in time.
  2011-10-01 pad Assets:US:TD:Checking Expenses:OpeningBalances

  ;; This directive saves an arbitrary string ("New York, USA") to a type
  ;; of event. I can then generate reports of days between event changes.
  ;; In this example, this is used for "at this date, I traveled to
  ;; New York". I use this to count the days I spent in every country, for
  ;; tax residence determination in Canada and in the US, and for
  ;; reporting for my immigration applications (they require info about
  ;; all my trips).
  2011-10-01 event "location" "New York, USA"

  ;; This is a simple note attached to an account. You can save all kinds
  ;; of little notes that get inserted in the right place in the reports.
  ;; I sometimes use this to save details from phone calls to specific
  ;; institutions, I save the detail.
  2011-10-01 note Assets:US:TD:Checking "I called TD about the incorrect
    fee and they mentioned they will reverse it"

  ;; This saves the price of the unit 'LOFT' in terms of the unit 'CAD'.
  ;; This is used to report current value vs. book value, for units which
  ;; typically have no external price source (such as the latest
  ;; evaluation on my property, in this example).
  2011-10-01 price LOFT  284000 CAD


I'm omitting very few other minor other details, such as how to book an
amount against a specific lot in a balance inventory.

With this minimal syntax, I am able to express a full set of accounts,
over many years.

Your thoughts and ideas welcome,
