========================================================
   BeanCount: Double-Entry Accounting from Text Input
========================================================

.. contents::
..
    1  Description
    2  Project Status
    3  Demo
    4  Runtime-Dependencies
    5  Download
    6  Documentation
    7  Copyright and License
    8  Author

.. important::

   This project, which has long been stable and in active use, is currently
   being rewritten from scratch (2013-06-01). The new project is called
   'daybook' and will provide most of the features that 'beancount' did, and
   much more, with simpler data structures and a better implementation. See
   http://furius.ca/daybook/ for details. Beancount will remain here for the
   foreseeable future.

Description
===========

A double-entry accounting system that uses a simple text file format as input. A
few Python scripts are used to parse the contents of the file, for example, to
serve the contents as a locally running web server. Scripts are provided to
convert from OFX files into Ledger input format, and other formats (easily
extensible).

Notes:

- The ideas and syntax is entirely inspired by John Wiegley's Ledger_,
  and the syntax is pretty much compatible with it, or at least it was
  at the time it was created. Beancount's syntax is a subset of Ledger
  (a little more restrictive), with a few additional directives. You
  should probably read Ledger's documentation in order to use
  Beancount.

- Beancount is a Python version of Ledger, and thus is much slower,
  but also easier to extend (the code is pure Python).

- Beancount provides a simple web front to view the contents of the
  database, so you don't have to parse the entire file everytime you
  want to view a different account (this helps mitigate the fact that
  parsing is comparatively slow).

- New features can be expected to flow between Ledger and Beancount,
  as the authors have been in touch and have discussed ways of doing
  integration. In particular, Ledger is being augmented with the
  ability to export its parser with a binding for the Python language,
  so Beancount's parser may eventually use the Ledger parser for
  speed, and Ledger may eventually leverage Beancount's web front-end.

.. _Ledger: http://www.newartisans.com/blog/projects/ledger.html


Project Status
==============

This code is stable; as a testimony, I'm using it personally, actively
to manage my own finances and my company's finances, and thus I'm
running it and its components at the very least a few times montly.
I've been using it for years without having to modify it
significantly. Basically, this software is in a functional state; this
is not abandonware, nor is it prototyping code either. You should be
able to use beancount to do "real work." [Updated on 2012-08]


Demo
====

There is a demonstration ledger input file under the examples
directory. To run a local web server on the example demo file, cd into
``examples`` and run the demo scripts.

- `Demo Ledger input file <examples/demo.ledger>`_
- `Demo Output <examples/output/balsheet_end.html>`_


Dependencies
============

- GNU flex and GNU bison (to build the parser)
- cdecimal (optional but strongly suggested, a faster Decimal type for Python)
- Bottle (a tiny web server, pure Python)


Download
========

A Mercurial repository can be found at:

  http://hg.furius.ca/public/beancount/

`Click here for download instructions. </web-furius/downloading.html>`_



Documentation
=============

- `CHANGES <CHANGES>`_
- `TODO <TODO>`_


Copyright and License
=====================

Copyright (C) 2007-2008  Martin Blais.  All Rights Reserved.

This code is distributed under the `GNU General Public License <COPYING>`_;


Author
======

Martin Blais <blais@furius.ca>
