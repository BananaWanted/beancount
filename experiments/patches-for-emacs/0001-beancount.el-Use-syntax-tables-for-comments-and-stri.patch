From 88484eb8715aa2533d9a72391218a7cf9518d82f Mon Sep 17 00:00:00 2001
From: Stefan Monnier <monnier@iro.umontreal.ca>
Date: Mon, 14 Sep 2015 09:11:40 -0400
Subject: [PATCH 1/3] * beancount.el: Use syntax-tables for comments and
 strings

(beancount-font-lock-keywords): Don't highlight strings	and comments.
(beancount-mode-syntax-table): New variable.
(beancount-mode): Set the syntax-table.  Tell font-lock to use that info.
Avoid font-lock-fontify-buffer when possible.
---
 src/elisp/beancount.el | 28 ++++++++++++++++++----------
 1 file changed, 18 insertions(+), 10 deletions(-)

diff --git a/src/elisp/beancount.el b/src/elisp/beancount.el
index 17b1905..fbba7e7 100644
--- a/src/elisp/beancount.el
+++ b/src/elisp/beancount.el
@@ -50,13 +50,7 @@
   "A list of the directive names.")
 
 (defvar beancount-font-lock-keywords
-  `(;; Comments
-    (";.+" . font-lock-comment-face)
-
-    ;; Strings
-    ("\".*?\"" . font-lock-string-face)
-
-    ;; Reserved keywords
+  `(;; Reserved keywords
     (,(regexp-opt beancount-directive-names) . font-lock-keyword-face)
 
     ;; Tags & Links
@@ -90,6 +84,13 @@
     (define-key map [(control c)(p)] #'beancount-test-align)
     map))
 
+(defvar beancount-mode-syntax-table
+  (let ((st (make-syntax-table)))
+    (modify-syntax-entry ?\" "\"\"" st)
+    (modify-syntax-entry ?\; "<" st)
+    (modify-syntax-entry ?\n ">" st)
+    st))
+
 ;;;###autoload
 (define-minor-mode beancount-mode
   "A minor mode to help editing Beancount files.
@@ -119,24 +120,31 @@ is great for sectioning large files with many transactions.
   (set (make-local-variable 'comment-add) 1)
 
   ;; No tabs by default.
+  ;; FIXME: Doesn't this belong in your ~/.emacs instead?
   (set (make-local-variable 'indent-tabs-mode) nil)
 
   ;; Customize font-lock for beancount.
   ;;
+  (set-syntax-table beancount-mode-syntax-table)
+  ;; Force font-lock to use the syntax-table to find strings-and-comments,
+  ;; regardless of what the "host major mode" decided.
+  (set (make-local-variable 'font-lock-keywords-only) nil)
   ;; Important: you have to use 'nil for the mode here because in certain major
   ;; modes (e.g. org-mode) the font-lock-keywords is a buffer-local variable.
   (if beancount-mode
       (font-lock-add-keywords nil beancount-font-lock-keywords)
     (font-lock-remove-keywords nil beancount-font-lock-keywords))
-  (font-lock-fontify-buffer)
+  (if (fboundp 'font-lock-flush)
+      (font-lock-flush)
+    (with-no-warnings (font-lock-fontify-buffer)))
 
   (when beancount-mode
     (beancount-init-accounts))
   )
 
 (defvar beancount-accounts nil
-  "A list of the accounts available in this buffer. This is a
-  cache of the value computed by beancount-get-accounts.")
+  "A list of the accounts available in this buffer.
+This is a cache of the value computed by `beancount-get-accounts'.")
 (make-variable-buffer-local 'beancount-accounts)
 
 (defun beancount-init-accounts ()
-- 
2.5.1

