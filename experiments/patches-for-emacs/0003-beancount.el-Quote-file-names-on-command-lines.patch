From 8116741ebabf4bba2099801d1e20e3a4ad958835 Mon Sep 17 00:00:00 2001
From: Stefan Monnier <monnier@iro.umontreal.ca>
Date: Mon, 14 Sep 2015 10:12:35 -0400
Subject: [PATCH 3/3] * beancount.el: Quote file names on command lines

(beancount-install-dir): New var.
(beancount--run): New function.
(beancount-check, beancount-query, beancount-context)
(beancount-linked): Use it.  Add docstring.
---
 src/elisp/beancount.el | 61 +++++++++++++++++++++++++++++++++-----------------
 1 file changed, 41 insertions(+), 20 deletions(-)

diff --git a/src/elisp/beancount.el b/src/elisp/beancount.el
index 425ce6c..821e301 100644
--- a/src/elisp/beancount.el
+++ b/src/elisp/beancount.el
@@ -387,6 +387,9 @@ what that column is and returns it (an integer)."
         ))
     column))
 
+(defvar beancount-install-dir nil
+  "Directory in which Beancount's source is located.
+Only useful if you have not installed Beancount properly in your PATH.")
 
 (defvar beancount-check-program "bean-check"
   "Program to run to run just the parser and validator on an
@@ -394,45 +397,63 @@ what that column is and returns it (an integer)."
 
 (defvar compilation-read-command)
 
-(defun beancount-check ()
-  (interactive)
-  (let ((compilation-read-command nil)
-        (compile-command
-         (format "%s %s" beancount-check-program (buffer-file-name))))
+(defun beancount--run (prog &rest args)
+  (let ((process-environment
+         (if beancount-install-dir
+             `(,(concat "PYTHONPATH="
+                        (expand-file-name "src/python"
+                                          beancount-install-dir))
+               ,(concat "PATH="
+                        (expand-file-name "bin" beancount-install-dir)
+                        ":" (getenv "PATH"))
+               ,@process-environment)
+           process-environment))
+        (compile-command (mapconcat (lambda (arg)
+                                      (if (stringp arg)
+                                          (shell-quote-argument arg) ""))
+                                    (cons prog args)
+                                    " ")))
     (call-interactively 'compile)))
 
+(defun beancount-check ()
+  "Run `beancount-check-program'."
+  (interactive)
+  (let ((compilation-read-command nil))
+    (beancount--run beancount-check-program
+                    (file-relative-name buffer-file-name))))
 
 (defvar beancount-query-program "bean-query"
   "Program to run to run just the parser and validator on an
   input file.")
 
 (defun beancount-query ()
+  "Run bean-query."
   (interactive)
-  (let ((compile-command
-         (format "%s %s " beancount-query-program (buffer-file-name))))
-    (call-interactively 'compile)))
+  ;; Don't let-bind compilation-read-command this time, since the default
+  ;; command is incomplete.
+  (beancount--run beancount-query-program
+                  (file-relative-name buffer-file-name) t))
 
 
 (defvar beancount-doctor-program "bean-doctor"
   "Program to run the doctor commands.")
 
 (defun beancount-context ()
+  "Get the \"context\" from `beancount-doctor-program'."
   (interactive)
-  (let ((compilation-read-command nil)
-        (compile-command
-         (format "%s %s %s %d"
-                 beancount-doctor-program "context"
-                 (buffer-file-name) (line-number-at-pos (point)))))
-    (call-interactively 'compile)))
+  (let ((compilation-read-command nil))
+    (beancount--run beancount-doctor-program "context"
+                    (file-relative-name buffer-file-name)
+                    (number-to-string (line-number-at-pos)))))
+
 
 (defun beancount-linked ()
+  "Get the \"linked\" info from `beancount-doctor-program'."
   (interactive)
-  (let ((compilation-read-command nil)
-        (compile-command
-         (format "%s %s %s %d"
-                 beancount-doctor-program "linked"
-                 (buffer-file-name) (line-number-at-pos (point)))))
-    (call-interactively 'compile)))
+  (let ((compilation-read-command nil))
+    (beancount--run beancount-doctor-program "linked"
+                    (file-relative-name buffer-file-name)
+                    (line-number-at-pos))))
 
 
 (provide 'beancount)
-- 
2.5.1

